#!/usr/bin/env bash
# shellcheck disable=SC2034,SC2154
# SC2034: foo appears unused. Verify it or export it.
# SC2154: var is referenced but not assigned.

[[ ! -d /etc/openvpn ]] && mkdir /etc/openvpn

# main procedural
{
	INSTALLER=/etc/.pivpn/auto_install/install.sh

	# Skip execution when sourcing the INSTALLER
	IN_DOCKER=true

	# shellcheck disable=SC1090
	source "${INSTALLER}"

	# Variables are needed in the functions call later.
	useUpdateVars=true
	PLAT=Ubuntu
	SUDO=
	SUDOE=
	runUnattended=true
	USING_UFW=0

	# shellcheck disable=SC1091
	source /etc/pivpn/setupVars.conf

	# The right way to test if a variable is unset or not.
	# See https://stackoverflow.com/a/13864829
	if [ -z ${IPv4dns+x} ]; then
		IPv4dns=$(nslookup 127.0.0.1 | grep Server: | awk '{print $2}')
	fi

	if [ -z ${pivpnHOST+x} ]; then
		if ! pivpnHOST=$(dig +short myip.opendns.com @resolver1.opendns.com)
		then
			echo "dig failed, now trying to curl eth0.me"
			if ! pivpnHOST=$(curl eth0.me)
			then
				echo "eth0.me failed, please check your internet connection/DNS"
				exit $?
			fi
		fi
	fi

	# Call functions in the INSTALLER
	[[ -z "${IPv4dev}" ]] && chooseInterface
	[[ -z "${SERVER_NAME}" ]] && generateServerName
	[[ ! -d /etc/openvpn/easy-rsa ]] && GenerateOpenVPN
	createServerConf
	confNetwork
	confOVPN

	sed -i '0,/\(dhcp-option DNS \)/ s/\(dhcp-option DNS \).*/\1'${pivpnDNS1}'\"/' /etc/openvpn/server.conf
	sed -i '0,/\(dhcp-option DNS \)/! s/\(dhcp-option DNS \).*/\1'${pivpnDNS2}'\"/' /etc/openvpn/server.conf

	printf "\\n\\n::: PiVPN Service Started\\n"
	cd /etc/openvpn
	openvpn --config server.conf
} 2>&1 | tee "/etc/pivpn-openvpn.log"

# When script is complete, transfer log to persistant OpenVPN directory:
[[ -d /etc/openvpn ]] && mv /etc/pivpn-openvpn.log /etc/openvpn/
